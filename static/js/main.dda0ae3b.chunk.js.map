{"version":3,"sources":["Home.js","Projects.js","App.js","index.js"],"names":["Home","Container","Row","Col","xs","style","fontSize","className","marginLeft","width","height","src","Projects","Button","variant","href","xmlns","fill","class","viewBox","d","disabled","App","useState","showProjects","setShowProjects","Navbar","bg","Brand","cursor","onClick","Nav","Link","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda0ae3b.chunk.js","sourcesContent":["import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport './App.css';\nconst Home = () => {\n  return (\n    <div>\n      <br />\n      <Container>\n        <Row>\n          <Col xs={1}>\n          </Col>\n          <Col xs={7} >\n            <h2>Hi!</h2>\n            <div style={{fontSize:\"1.5rem\"}} className=\"description\">\n              I'm Ray Onishi, a junior studying computer science at Stony Brook University.\n              I'm an aspiring software engineer with an interest in the finance and fintech industry.\n            </div>\n          </Col>\n          <Col xs={3} style={{marginLeft:\"30px\"}}>\n            <img width=\"250px\" height=\"250px\" src=\"https://www.svgrepo.com/show/26995/avatar.svg\" />\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col xs={1}>\n          </Col>\n          <Col xs={10}>\n            <h2>Technologies I Use</h2>\n            <div className=\"tech-list\" >\n              <div className=\"item\">\n                <img src=\"react.svg\" />\n              </div>\n              <div className=\"item\">\n                <img src=\"node.svg\" />\n              </div>\n              <div className=\"item\">\n                <img src=\"mongo.svg\" />\n              </div>\n              <div className=\"item\">\n                <img src=\"js.svg\" />\n              </div>\n              <div className=\"item\">\n                <img src=\"java.svg\" />\n              </div>\n              <div className=\"item\">\n                <img src=\"python.svg\" />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Home;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst Projects = () => {\n  return (\n    <div>\n      <br />\n      <Container>\n        <Row>\n          <Col xs={1}>\n          </Col>\n          <Col xs={11}>\n            <h2>My Projects</h2>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col xs={1}>\n          </Col>\n          <Col xs={5} className=\"center\">\n            <h4>Airtable Translator</h4>\n            <div className=\"description\">\n              The Airtable translator was a project that I worked on to automate the translation of fields in an Airtable\n              database. The script uses Google & IBM translations to translate the content to the required language and\n              switches between the two to minimize cost by keeping track of translated character counts. The script can also\n              be setup to run on a schedule using Firebase functions.\n            </div>\n            <Button className=\"link-button\" variant=\"outline-primary\" href=\"https://github.com/ronishi1/airtable_translation\">Link to github            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" class=\"bi bi-github\" viewBox=\"0 0 16 16\">\n                          <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>\n                        </svg></Button>\n          </Col>\n\n          <Col xs={5} className=\"center\">\n            <h4>Dynamic Memory Allocator (C)</h4>\n            <div className=\"description\">\n              The dynamic memory allocator project was a project that served to implement my own version of the functions\n              free(),malloc(), and realloc() used for memory allocation in C. This was accomplished using free lists segregated\n              by size, coalescing of free blocks, and other methods used to optimize memory allocation. The source code will be\n              made available after the end of the semester.\n            </div>\n            <Button variant=\"outline-primary\" disabled>Link not available</Button>{' '}\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col xs={1}>\n          </Col>\n          <Col xs={5} className=\"center\">\n            <h4>User Instructions Project</h4>\n            <div className=\"description\">\n              The user instructions project is an assignment highlighting the importance of concise, clear, and visual instructions\n              when it comes to a product or service. In my project, I went over the basics of setting up a proper budget\n              using Mint with visuals for every step of the process. I made sure to focus on making each step as simple as possible\n              in order to make it easy to follow and go through.\n            </div>\n            <Button className=\"link-button\" variant=\"outline-primary\" href=\"user_instructions.pdf\">Link to PDF</Button>\n          </Col>\n          <Col xs={5} className=\"center\">\n            <h4>Press Release Project</h4>\n            <div className=\"description\">\n              The press release project is an assignment where we composed a press release for a product, event, service or\n              system. The focus of this project was on audience awareness and writing in order to make it informative for both\n              technical and non-technical readers of the press release. In my project, I wrote a press release for an event\n              happening on campus hosted by the Japanese Student Organization.\n            </div>\n            <Button className=\"link-button\" variant=\"outline-primary\" href=\"press_release.pdf\">Link to PDF</Button>\n          </Col>\n        </Row>\n        <br />\n      </Container>\n    </div>\n  )\n}\n\nexport default Projects;\n","import React , {useState} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport './App.css';\nimport Home from './Home';\nimport Projects from './Projects';\nconst App = () => {\n  const [showProjects,setShowProjects] = useState(false);\n\n  return (\n    <div>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Container style={{width:\"76.5%\"}}>\n          <Navbar.Brand style={{cursor:\"pointer\"}} className=\"brand-font\" onClick={() => setShowProjects(false)} >Ray Onishi</Navbar.Brand>\n          <Nav className=\"ml-auto\">\n            <Nav.Link style={{fontSize:\"1.15rem\"}} onClick={() => setShowProjects(true)}>Projects</Nav.Link>\n            <Nav.Link style={{fontSize:\"1.15rem\"}} href=\"resume.pdf\">Resume</Nav.Link>\n            <Nav.Link href=\"http://www.github.com/ronishi1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-github\" viewBox=\"0 0 16 16\">\n                <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>\n              </svg>\n            </Nav.Link>\n            <Nav.Link href=\"https://www.linkedin.com/in/ray-onishi/\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\n                <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\"/>\n              </svg>\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      {showProjects ? <Projects /> : <Home />}\n    </div>\n  );\n}\n\nexport default App;\n\n// <BrowserRouter>\n//   <Routes>\n//     <Route path=\"/\" element={<Home />} />\n//     <Route path=\"/projects\" element={<Projects />}/>\n//   </Routes>\n// </BrowserRouter>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}